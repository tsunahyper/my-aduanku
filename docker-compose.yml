version: "3.8"

services:
  # MongoDB Database
  mongodb:
    image: mongo:latest
    container_name: aduanku-mongodb
    ports:
      - "27017:27017"
    volumes:
      - mongodb_data:/data/db
    command: mongod --replSet rs0
    restart: unless-stopped
    networks:
      - aduanku-network

  # Backend Services
  auth-service:
    build: ./backend/auth-service
    container_name: aduanku-auth-service
    ports:
      - "5001:5001"
    environment:
      - PORT=5001
      - NODE_ENV=production
      - DB_URI=${AUTH_DB_URI:-mongodb://mongodb:27017/aduanku_auth}
      - JWT_SECRET=${JWT_SECRET:-your-super-secret-jwt-key-change-this-in-production-12345}
      - JWT_EXPIRES_IN=15m
    depends_on:
      - mongodb
    restart: unless-stopped
    networks:
      - aduanku-network

  user-service:
    build: ./backend/user-service
    container_name: aduanku-user-service
    ports:
      - "5002:5002"
    environment:
      - PORT=5002
      - NODE_ENV=production
      - DB_URI=${USER_DB_URI:-mongodb://mongodb:27017/aduanku_users}
      - JWT_SECRET=${JWT_SECRET:-your-super-secret-jwt-key-change-this-in-production-12345}
      - AWS_REGION=${AWS_REGION:-us-east-1}
      - AWS_ACCESS_KEY_ID=${AWS_ACCESS_KEY_ID:-your-aws-access-key}
      - AWS_SECRET_ACCESS_KEY=${AWS_SECRET_ACCESS_KEY:-your-aws-secret-key}
      - S3_BUCKET=${S3_BUCKET:-aduanku-uploads}
    depends_on:
      - mongodb
    restart: unless-stopped
    networks:
      - aduanku-network

  issue-service:
    build: ./backend/issue-service
    container_name: aduanku-issue-service
    ports:
      - "5003:5003"
    environment:
      - PORT=5003
      - NODE_ENV=production
      - DB_URI=${ISSUE_DB_URI:-mongodb://mongodb:27017/aduanku_issues}
      - JWT_SECRET=${JWT_SECRET:-your-super-secret-jwt-key-change-this-in-production-12345}
      - AWS_REGION=${AWS_REGION:-us-east-1}
      - AWS_ACCESS_KEY_ID=${AWS_ACCESS_KEY_ID:-your-aws-access-key}
      - AWS_SECRET_ACCESS_KEY=${AWS_SECRET_ACCESS_KEY:-your-aws-secret-key}
      - S3_BUCKET=${S3_BUCKET:-aduanku-uploads}
    depends_on:
      - mongodb
    restart: unless-stopped
    networks:
      - aduanku-network

  comments-service:
    build: ./backend/comments-service
    container_name: aduanku-comments-service
    ports:
      - "5004:5004"
    environment:
      - PORT=5004
      - NODE_ENV=production
      - DB_URI=${COMMENTS_DB_URI:-mongodb://mongodb:27017/aduanku_comments}
      - JWT_SECRET=${JWT_SECRET:-your-super-secret-jwt-key-change-this-in-production-12345}
      - AWS_REGION=${AWS_REGION:-us-east-1}
      - AWS_ACCESS_KEY_ID=${AWS_ACCESS_KEY_ID:-your-aws-access-key}
      - AWS_SECRET_ACCESS_KEY=${AWS_SECRET_ACCESS_KEY:-your-aws-secret-key}
      - S3_BUCKET=${S3_BUCKET:-aduanku-uploads}
    depends_on:
      - mongodb
    restart: unless-stopped
    networks:
      - aduanku-network

  analytics-service:
    build: ./backend/analytics-service
    container_name: aduanku-analytics-service
    ports:
      - "5005:5005"
    environment:
      - PORT=5005
      - NODE_ENV=production
      - DB_URI=${ANALYTICS_DB_URI:-mongodb://mongodb:27017/aduanku_analytics}
      - JWT_SECRET=${JWT_SECRET:-your-super-secret-jwt-key-change-this-in-production-12345}
    depends_on:
      - mongodb
    restart: unless-stopped
    networks:
      - aduanku-network

  # Frontend Service
  frontend:
    build: ./frontend/my-aduanku
    container_name: aduanku-frontend
    ports:
      - "3000:3000"
    environment:
      - NODE_ENV=production
    depends_on:
      - auth-service
      - user-service
      - issue-service
      - comments-service
      - analytics-service
    restart: unless-stopped
    networks:
      - aduanku-network

volumes:
  mongodb_data:

networks:
  aduanku-network:
    driver: bridge
